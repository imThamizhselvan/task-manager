{"version":3,"sources":["firebase.js","components/styles.js","components/Card.js","components/List.js","components/Board.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","Wrapper","styled","div","_templateObject","BoardWrapper","_templateObject2","ListWrapper","_templateObject3","CardDescWrapper","_templateObject4","SingleLineInput","input","_templateObject5","MultiLineInput","textarea","_templateObject6","AddComment","button","_templateObject7","CloseIcon","span","_templateObject8","Card","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","props","edit","collection","where","task","title","get","then","querySnapshot","forEach","doc","id","update","desc","state","taskDesc","taskTitle","console","log","catch","error","add","creator","currentOwner","status","docRef","closeModal","deleteTask","delete","setState","length","_this2","react_default","a","createElement","onClick","class","value","onChange","evt","target","Component","customStyles","content","overflow","margin","border","dragTaskKey","List","handleEditModal","data","openModals","onDragStart","onDragOver","ev","cat","preventDefault","onDrop","modalIsOpen","openModal","bind","assertThisInitialized","lib_default","isOpen","onRequestClose","style","ariaHideApp","Card_Card","tasks","map","draggable","Board","todo","wip","comp","current","editModal","concat","toConsumableArray","onSnapshot","List_List","App","className","Board_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce1dde73.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCF3he5hYHnn_PMNYz7oZf0-nk4Ym1NJ5E\",\n  authDomain: \"taskmanager-ec3aa.firebaseapp.com\",\n  databaseURL: \"https://taskmanager-ec3aa.firebaseio.com\",\n  projectId: \"taskmanager-ec3aa\",\n  storageBucket: \"taskmanager-ec3aa.appspot.com\",\n  messagingSenderId: \"562232183908\" \n});\n\nexport const db = firebase.firestore();","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n    padding: 20px;\n    padding-left: 5%;\n    background-color: #f2f2f2;\n    -webkit-box-shadow: -1px 9px 15px 0px rgba(0,0,0,0.29);\n    -moz-box-shadow: -1px 9px 15px 0px rgba(0,0,0,0.29);\n    box-shadow: -1px 9px 15px 0px rgba(0,0,0,0.29);\n    border-radius: 10px;\n`;\n\nexport const BoardWrapper = styled.div`\n    padding-top: 20px;\n    padding-left: 5%;\n`;\n\nexport const ListWrapper = styled.div`\n    display: inline-block;\n    margin: 0 auto;\n    padding: 20px;\n    max-width: 250px;\n    margin: 20px;\n    background-color: #f2f2f2;\n    -webkit-box-shadow: 0px 0px 15px 0px rgba(0,0,0,0.29);\n    -moz-box-shadow: 0px 0px 15px 0px rgba(0,0,0,0.29);\n    box-shadow: 0px 0px 15px 0px rgba(0,0,0,0.29);\n    border-radius: 10px;\n    height: 400px;\n    width: 300px;\n    overflow-y: scroll;\n    overflow-x: hidden;\n`;\n\nexport const CardDescWrapper = styled.div`\n    border: 1px solid;\n    min-height: 150px;\n    padding-left: 3px;\n    border-radius: 10px;\n    margin: 20px 1px 20px 1px;\n    &:hover {\n        cursor: pointer;\n        box-shadow: 0px 0px 15px 0px rgba(0,0,0,0.29);\n    }\n`;\n\nexport const SingleLineInput = styled.input`\n    width: 80%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    box-sizing: border-box;\n    border: 3px solid #ccc;\n    -webkit-transition: 0.5s;\n    transition: 0.5s;\n    outline: none;\n    &:focus {\n        border: 3px solid #555;\n    }\n`;\n\nexport const MultiLineInput = styled.textarea`\n    width: 80%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    box-sizing: border-box;\n    border: 3px solid #ccc;\n    -webkit-transition: 0.5s;\n    transition: 0.5s;\n    min-height: 100px;\n    outline: none;\n    &:focus {\n        border: 3px solid #555;\n    }\n`;\n\nexport const AddComment = styled.button`\n    background-color: white; \n    color: black; \n    border: 2px solid #ccc;\n    padding: 16px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: block;\n    font-size: 16px;\n    margin: 4px 2px;\n    -webkit-transition-duration: 0.4s; /* Safari */\n    transition-duration: 0.4s;\n    cursor: pointer;\n    &:hover {\n        border: 2px solid #555;\n        background-color: #555;\n        color: white;\n    }\n`;\n\nexport const CloseIcon = styled.span`\n    float: right;\n    font-size: 20px;\n    cursor: pointer;\n    margin-right: 20px;\n    &:hover {\n        font-size: 22px;\n    }  \n`;","import React, { Component } from 'react';\nimport { db } from '../firebase';\nimport { Wrapper, SingleLineInput, MultiLineInput, AddComment, CloseIcon } from './styles';\n\nexport default class Card extends Component {\n  constructor() {\n    super();\n    this.setState({\n      taskTitle: '',\n      taskDesc: '',\n      deleteTask: ''\n    })\n  }\n\n  onSubmit = () => {\n    if (this.props.edit) {\n      db.collection('tasks').where('title', '==', this.props.task[0].title)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n            var updateData = db.collection(\"tasks\").doc(doc.id);\n            return updateData.update({\n              desc: this.state.taskDesc,\n              title: this.state.taskTitle,\n            })\n            .then(function() {\n                console.log(\"Document successfully updated!\");\n            })\n            .catch(function(error) {\n                console.error(\"Error updating document: \", error);\n            });\n        });\n      })\n      .catch(function(error) {\n        console.log(\"Error getting documents: \", error);\n      });\n    } else {\n      db.collection('tasks').add({\n        creator: \"thamizh\",\n        currentOwner: \"thamizh\",\n        desc: this.state.taskDesc,\n        title: this.state.taskTitle,\n        status: this.props.status\n      })\n      .then(function(docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n      })\n      .catch(function(error) {\n        console.error(\"Error adding document: \", error);\n      });\n    }\n    this.props.closeModal();\n  }\n\n  deleteTask = () => {\n    if (this.props.edit) {\n      db.collection('tasks').where('title', '==', this.props.task[0].title)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          db.collection(\"tasks\").doc(doc.id).delete().then(function() {\n              console.log(\"Document successfully deleted!\");\n          }).catch(function(error) {\n              console.error(\"Error removing document: \", error);\n          });\n        });\n      })\n      .catch(function(error) {\n          console.log(\"Error getting documents: \", error);\n      });\n    }\n    this.props.closeModal();\n  }\n\n  componentWillMount() {\n    if (this.props.task && this.props.task.length > 0) {\n      this.setState({\n        taskTitle: this.props.task[0].title,\n        taskDesc: this.props.task[0].desc\n      })\n    } else {\n      this.setState({\n        taskTitle: '',\n        taskDesc: ''\n      })\n    }\n  }\n\n  \n\n  render() {\n    return (\n      <Wrapper>\n        <CloseIcon onClick={this.props.closeModal}><i class=\"fa fa-close\"></i></CloseIcon>\n        <CloseIcon onClick={this.deleteTask}><i class=\"fa fa-trash\"></i></CloseIcon>\n        <p> Task Title </p>\n        <SingleLineInput value={this.state.taskTitle} onChange={(evt) => this.setState({ taskTitle: evt.target.value })} />\n        <p> Task Description </p>\n        <MultiLineInput value={this.state.taskDesc} onChange={(evt) => this.setState({ taskDesc: evt.target.value })} />\n        <AddComment onClick={this.onSubmit}> Add Task </AddComment>\n      </Wrapper>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport Card from './Card';\nimport { db } from '../firebase';\nimport { ListWrapper, CloseIcon, CardDescWrapper, AddComment } from './styles';\n\nconst customStyles = {\n  content : {\n    overflow: 'hidden',\n    margin: '6%',\n    border: 'none',\n  }\n};\n\nlet dragTaskKey = '';\n\nexport default class List extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: false,\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({modalIsOpen: true});\n  }\n  \n  closeModal() {\n    this.setState({modalIsOpen: false});\n  }\n\n  handleEditModal = (data) => {\n    this.props.openModals(data);\n  }\n\n  onDragStart = (task) => {\n    dragTaskKey = task.title;\n  }\n\n  onDragOver = (ev, cat) => {\n    ev.preventDefault();\n  }\n\n  onDrop = (ev, cat) => {\n    db.collection('tasks').where('title', '==', dragTaskKey)\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n          var updateData = db.collection(\"tasks\").doc(doc.id);\n          return updateData.update({\n            status: cat,\n          })\n          .then(function() {\n              console.log(\"Document successfully updated!\");\n          })\n          .catch(function(error) {\n              console.error(\"Error updating document: \", error);\n          });\n      });\n    })\n    .catch(function(error) {\n      console.log(\"Error getting documents: \", error);\n    });\n\n\n    ev.preventDefault();\n  }\n\n  render() {\n    return (\n      <ListWrapper onDragOver={(ev) => this.onDragOver(ev, this.props.cat)} onDrop={(ev) => this.onDrop(ev, this.props.cat)}>\n        <CloseIcon><i class=\"fa fa-trash\"></i></CloseIcon>\n        <CloseIcon><i class=\"fa fa-plus\" onClick={this.openModal}></i></CloseIcon>\n        <p> {this.props.title} </p>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          ariaHideApp={false}\n          status={this.props.cat}\n        >\n          <Card closeModal={this.closeModal} status={this.props.cat} edit={false} />\n        </Modal>\n        { this.props.tasks.map((task) =>\n          <CardDescWrapper onClick={() => this.handleEditModal(task)} draggable={true} onDragStart={()=> this.onDragStart(task)}> \n            <p> {task.title} </p>\n            <p> {task.desc} </p>\n          </CardDescWrapper>    \n        )}\n      </ListWrapper>\n    );\n  }\n}","import React, { Component } from 'react';\nimport List from './List';\nimport Modal from 'react-modal';\nimport Card from './Card';\nimport { db } from '../firebase';\nimport { Wrapper, BoardWrapper, SingleLineInput, MultiLineInput, AddComment, CloseIcon } from './styles';\n\nconst customStyles = {\n  content : {\n    overflow: 'hidden',\n    margin: '6%',\n    border: 'none',\n  }\n};\n\nexport default class Board extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: false,\n      todo: [], \n      wip: [],\n      comp: [],\n      current: []\n    };\n    this.editModal = this.editModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  editModal(task) {\n    this.setState({\n      current: [...this.state.current, task],\n      modalIsOpen: true\n    });\n  }\n  \n  closeModal() {\n    this.setState({\n      current: [],\n      modalIsOpen: false\n    });\n  }\n\n  componentDidMount() {\n    db.collection('tasks').where('status', '==', 'todo')\n    .onSnapshot((querySnapshot) => {    \n      this.setState({ todo: []});\n      querySnapshot.forEach((doc) => {\n        this.setState({\n          todo: [...this.state.todo, doc.data() ],\n        });\n      });\n    });\n    db.collection('tasks').where('status', '==', 'wip')\n    .onSnapshot((querySnapshot) => {    \n      this.setState({ wip: []});\n      querySnapshot.forEach((doc) => {\n        this.setState({\n          wip: [...this.state.wip, doc.data() ],\n        });\n      });\n    });\n    db.collection('tasks').where('status', '==', 'comp')\n    .onSnapshot((querySnapshot) => { \n      this.setState({ comp: []});   \n      querySnapshot.forEach((doc) => {\n        this.setState({\n          comp: [...this.state.comp, doc.data() ],\n        });\n      });\n    });\n  }\n\n  render() {\n    return (\n        <BoardWrapper>\n          <Modal\n            isOpen={this.state.modalIsOpen}\n            onRequestClose={this.closeModal}\n            style={customStyles}\n            ariaHideApp={false}\n          >\n            <Card closeModal={this.closeModal} status={this.props.cat} task={this.state.current} edit={true} />\n          </Modal>\n          <p> Task board </p>\n          <List title=\"To do\" tasks={this.state.todo} cat=\"todo\" openModals={this.editModal} />\n          <List title=\"Work in Progress\" tasks={this.state.wip} cat=\"wip\" openModals={this.editModal}/>\n          <List title=\"Completed\" tasks={this.state.comp} cat=\"comp\" openModals={this.editModal}/>\n        </BoardWrapper>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Card from './components/Card';\nimport List from './components/List';\nimport Board from './components/Board';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Board />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}