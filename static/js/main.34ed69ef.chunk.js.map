{"version":3,"sources":["firebase.js","components/styles.js","components/Card.js","components/List.js","components/Board.js","history.js","containers/Login/styles.js","containers/Login/index.js","components/Twitter/index.js","components/TaskBox/styles.js","components/TaskBox/index.js","components/Activity/styles.js","components/Activity/index.js","containers/Home/styles.js","containers/Home/index.js","App.js","serviceWorker.js","index.js","images/undraw_dev.svg","images/undraw_task.svg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","Wrapper","styled","div","_templateObject","BoardWrapper","_templateObject2","BoardTitle","p","_templateObject3","ListWrapper","_templateObject4","CardDescWrapper","_templateObject5","props","cat","Chip","span","_templateObject6","CardTitle","_templateObject7","CardDesc","_templateObject8","SingleLineInput","input","_templateObject9","MultiLineInput","textarea","_templateObject10","AddComment","button","_templateObject11","CloseIcon","_templateObject12","ListTitle","_templateObject13","CardLayer","_templateObject14","Card","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","console","log","assertThisInitialized","edit","collection","doc","task","id","update","desc","state","taskDesc","title","taskTitle","taskCat","then","closeModal","catch","error","add","creator","currentOwner","status","docRef","deleteTask","where","get","querySnapshot","forEach","delete","setState","length","_this2","react_default","a","createElement","onClick","className","value","onChange","evt","target","Component","dragTaskKey","List","handleEditModal","data","openModals","onDragStart","onDragOver","ev","preventDefault","onDrop","modalIsOpen","openModal","bind","lib_default","isOpen","onRequestClose","ariaHideApp","Card_Card","tasks","map","i","key","draggable","Board","todo","wip","test","comp","current","editModal","concat","toConsumableArray","onSnapshot","objectSpread","List_List","createBrowserHistory","InfoArea","styles_templateObject","LoginArea","styles_templateObject2","LoginWrapper","styles_templateObject3","Img","img","styles_templateObject4","Login","login","provider","auth","GithubAuthProvider","signInWithPopup","result","token","credential","accessToken","user","localStorage","setItem","history","push","code","message","email","src","dev","GithubLoginButton_default","Twitter","index_es","sourceType","screenName","theme","options","height","noScrollbar","TaskBox_styles_templateObject","TaskBox_styles_templateObject2","Button","TaskBox_styles_templateObject3","TaskBox","handleWork","styles_Wrapper","styles_Img","Propic","Activity_styles_templateObject","Name","Activity_styles_templateObject2","PersonWrapper","Activity_styles_templateObject3","ActivityWrapper","Activity_styles_templateObject4","Activity","handleActivityType","type","item","alt","actor","avatar_url","display_login","Home_styles_templateObject","SingleLayoutWrapper","Home_styles_templateObject2","Home_styles_templateObject3","HalfLayoutWrapper","Home_styles_templateObject4","Home","activity","getItem","fetch","response","json","Home_styles_Wrapper","TaskBox_TaskBox","Activity_Activity","Twitter_Twitter","App","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.34ed69ef.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCF3he5hYHnn_PMNYz7oZf0-nk4Ym1NJ5E\",\n  authDomain: \"taskmanager-ec3aa.firebaseapp.com\",\n  databaseURL: \"https://taskmanager-ec3aa.firebaseio.com\",\n  projectId: \"taskmanager-ec3aa\",\n  storageBucket: \"taskmanager-ec3aa.appspot.com\",\n  messagingSenderId: \"562232183908\" \n});\n\nexport const db = firebase.firestore();","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n`;\n\nexport const BoardWrapper = styled.div`\n  background-color: #f2f3f7;\n  height: 100%;\n  width: 100%;\n  padding: 30px;\n`;\n\nexport const BoardTitle = styled.p`\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nexport const ListWrapper = styled.div`\n  display: inline-block;\n  margin: 0 auto;\n  margin: 20px;\n  background-color: #f2f2f2;\n  -webkit-box-shadow: 0px 0px 15px 0px rgba(0,0,0,0.29);\n  -moz-box-shadow: 0px 0px 15px 0px rgba(0,0,0,0.29);\n  box-shadow: 0px 0px 15px 0px rgba(0,0,0,0.29);\n  border-radius: 10px;\n  height: 500px;\n  width: 250px;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nexport const CardDescWrapper = styled.div`  \n  min-height: 150px;\n  background-color: #fff;\n  border-radius: 10px;\n  margin: 20px 1px 20px 1px;\n  box-shadow: 5px 5px 10px rgba(0,0,0,0.2);\n  border-top: 13px solid ${props => \n    {\n      const cat = props.cat;\n      if (cat === 'Project') {\n        return '#ffbe2b';\n      } else if (cat === 'Development') {\n        return '#6245ff';\n      } else {\n        return 'black';\n      }\n    }};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const Chip = styled.span`\n  position: relative;\n  padding: 5px;\n  border-bottom-radius: 5px;\n  background-color: ${props => \n    {\n      const cat = props.cat;\n      if (cat === 'Project') {\n        return '#ffbe2b';\n      } else if (cat === 'Development') {\n        return '#6245ff';\n      } else {\n        return 'black';\n      }\n    }};\n  color: #fff;\n  font-size: 12px;\n  margin-left: 10px;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  vertical-align: super;\n`;\n\nexport const CardTitle = styled.span`\n  text-transform: capitalize;\n  font-weight: bold;\n  padding: 5px;\n  display: block;\n`;\n\nexport const CardDesc = styled.span`\n  padding-left: 5px;\n  font-size: 12px;\n`;\n\nexport const SingleLineInput = styled.input`\n    padding: 12px 20px;\n    width: 70%;\n    margin: 8px 0;\n    box-sizing: border-box;\n    border: 3px solid #ccc;\n    -webkit-transition: 0.5s;\n    transition: 0.5s;\n    outline: none;\n    &:focus {\n        border: 3px solid #555;\n    }\n`;\n\nexport const MultiLineInput = styled.textarea`\n    padding: 12px 20px;\n    width: 70%;\n    margin: 8px 0;\n    box-sizing: border-box;\n    border: 3px solid #ccc;\n    -webkit-transition: 0.5s;\n    transition: 0.5s;\n    min-height: 100px;\n    outline: none;\n    &:focus {\n        border: 3px solid #555;\n    }\n`;\n\nexport const AddComment = styled.button`\n    background-color: white; \n    color: black; \n    border: 2px solid #ccc;\n    padding: 16px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: block;\n    font-size: 16px;\n    margin: 4px 2px;\n    -webkit-transition-duration: 0.4s; /* Safari */\n    transition-duration: 0.4s;\n    cursor: pointer;\n    &:hover {\n        border: 2px solid #555;\n        background-color: #555;\n        color: white;\n    }\n`;\n\nexport const CloseIcon = styled.span`\n    float: right;\n    font-size: 20px;\n    cursor: pointer;\n    color: #fff;\n    margin-right: 20px;\n    margin-top: 10px; \n`;\n\nexport const ListTitle = styled.div`\n  padding: 10px;\n  background-color: rebeccapurple;\n  color: white;\n  font-weight: bold;\n`;\n\nexport const CardLayer = styled.div`\n  padding: 10px;\n\n`;","import React, { Component } from 'react';\nimport { db } from '../firebase';\nimport { Wrapper, SingleLineInput, MultiLineInput, AddComment, CloseIcon } from './styles';\n\nexport default class Card extends Component {\n  constructor() {\n    super();\n    this.setState({\n      taskTitle: '',\n      taskDesc: '',\n      deleteTask: '',\n      taskCat: ''\n    })\n  }\n\n  onSubmit = () => {\n    console.log('this', this);\n    if (this.props.edit) {\n      var updateTasks = db.collection(\"tasks\").doc(this.props.task[0].id);\n      return updateTasks.update({\n        desc: this.state.taskDesc,\n        title: this.state.taskTitle,\n        cat: this.state.taskCat\n      })\n      .then(() => {\n          console.log(\"Document successfully updated!\");\n          this.props.closeModal();\n      })\n      .catch(function(error) {\n          console.error(\"Error updating document: \", error);\n      });\n    } else {\n      db.collection('tasks').add({\n        creator: \"thamizh\",\n        currentOwner: \"thamizh\",\n        desc: this.state.taskDesc,\n        title: this.state.taskTitle,\n        status: this.props.status,\n        cat: this.state.taskCat\n      })\n      .then(function(docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n      })\n      .catch(function(error) {\n        console.error(\"Error adding document: \", error);\n      });\n    }\n    this.props.closeModal();\n  }\n\n  deleteTask = () => {\n    if (this.props.edit) {\n      db.collection('tasks').where('title', '==', this.props.task[0].title)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          db.collection(\"tasks\").doc(doc.id).delete().then(function() {\n              console.log(\"Document successfully deleted!\");\n          }).catch(function(error) {\n              console.error(\"Error removing document: \", error);\n          });\n        });\n      })\n      .catch(function(error) {\n          console.log(\"Error getting documents: \", error);\n      });\n    }\n    this.props.closeModal();\n  }\n\n  componentWillMount() {\n    if (this.props.task && this.props.task.length > 0) {\n      this.setState({\n        taskTitle: this.props.task[0].title,\n        taskDesc: this.props.task[0].desc,\n        taskCat: this.props.task[0].cat\n      })\n    } else {\n      this.setState({\n        taskTitle: '',\n        taskDesc: '',\n        taskCat: ''\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <CloseIcon onClick={this.props.closeModal}><i className=\"fa fa-close\"></i></CloseIcon>\n        <CloseIcon onClick={this.deleteTask}><i className=\"fa fa-trash\"></i></CloseIcon>\n        <p> Title </p>\n        <SingleLineInput value={this.state.taskTitle} onChange={(evt) => this.setState({ taskTitle: evt.target.value })} />\n        <p> Description </p>\n        <MultiLineInput value={this.state.taskDesc} onChange={(evt) => this.setState({ taskDesc: evt.target.value })} />\n        <p> Category </p>\n        <SingleLineInput value={this.state.taskCat} onChange={(evt) => this.setState({ taskCat: evt.target.value })} />\n        <AddComment onClick={this.onSubmit}> Add Task </AddComment>\n      </Wrapper>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport Card from './Card';\nimport { db } from '../firebase';\nimport { ListWrapper, CloseIcon, CardLayer, CardDescWrapper, Chip, CardDesc, CardTitle, ListTitle } from './styles';\n\nlet dragTaskKey = '';\n\nexport default class List extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: false,\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({modalIsOpen: true});\n  }\n  \n  closeModal() {\n    this.setState({modalIsOpen: false});\n  }\n\n  handleEditModal = (data) => {\n    this.props.openModals(data);\n  }\n\n  onDragStart = (task) => {\n    dragTaskKey = task.id;\n  }\n\n  onDragOver = (ev, cat) => {\n    ev.preventDefault();\n  }\n\n  onDrop = (ev, cat) => {\n    var updateData = db.collection(\"tasks\").doc(dragTaskKey);\n    return updateData.update({\n      status: cat,\n    })\n    .then(function() {\n        console.log(\"Document successfully updated!\");\n    })\n    .catch(function(error) {\n        console.error(\"Error updating document: \", error);\n    });\n  }\n\n  render() {\n    return (\n      <ListWrapper onDragOver={(ev) => this.onDragOver(ev, this.props.cat)} onDrop={(ev) => this.onDrop(ev, this.props.cat)}>\n        <CloseIcon><i className=\"fa fa-plus\" onClick={this.openModal}></i></CloseIcon>\n        <ListTitle> {this.props.title} </ListTitle>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          ariaHideApp={false}\n        >\n          <Card closeModal={this.closeModal} status={this.props.cat} edit={false} />\n        </Modal>\n        <CardLayer>\n\n        { this.props.tasks.map((task, i) =>\n          <CardDescWrapper cat={task.cat} key={i} onClick={() => this.handleEditModal(task)} draggable={true} onDragStart={()=> this.onDragStart(task)}> \n            <Chip cat={task.cat}> {task.cat || 'Development'} </Chip>\n            <CardTitle> {task.title} </CardTitle>\n            <CardDesc> -> {task.desc} </CardDesc>\n          </CardDescWrapper>    \n        )}\n        </CardLayer>\n      </ListWrapper>\n    );\n  }\n}","import React, { Component } from 'react';\nimport List from './List';\nimport Modal from 'react-modal';\nimport Card from './Card';\nimport { db } from '../firebase';\nimport { BoardWrapper, BoardTitle} from './styles';\n\nexport default class Board extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: false,\n      todo: [], \n      wip: [],\n      test: [],\n      comp: [],\n      current: []\n    };\n    this.editModal = this.editModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  editModal(task) {\n    this.setState({\n      current: [...this.state.current, task],\n      modalIsOpen: true\n    });\n  }\n  \n  closeModal() {\n    this.setState({\n      current: [],\n      modalIsOpen: false\n    });\n  }\n\n  componentDidMount() {\n    db.collection('tasks').where('status', '==', 'todo')\n    .onSnapshot((querySnapshot) => {    \n      this.setState({ todo: []});\n      querySnapshot.forEach((doc) => {\n        doc = {\n          ...doc.data(),\n          id: doc.id\n        }\n        this.setState({\n          todo: [...this.state.todo, doc ],\n        });\n      });\n    });\n    db.collection('tasks').where('status', '==', 'wip')\n    .onSnapshot((querySnapshot) => {    \n      this.setState({ wip: []});\n      querySnapshot.forEach((doc) => {\n        doc = {\n          ...doc.data(),\n          id: doc.id\n        }\n        this.setState({\n          wip: [...this.state.wip, doc ],\n        });\n      });\n    });\n    db.collection('tasks').where('status', '==', 'comp')\n    .onSnapshot((querySnapshot) => { \n      this.setState({ comp: []});   \n      querySnapshot.forEach((doc) => {\n        doc = {\n          ...doc.data(),\n          id: doc.id\n        }\n        this.setState({\n          comp: [...this.state.comp, doc ],\n        });\n      });\n    });\n    db.collection('tasks').where('status', '==', 'test')\n    .onSnapshot((querySnapshot) => { \n      this.setState({ test: []});   \n      querySnapshot.forEach((doc) => {\n        doc = {\n          ...doc.data(),\n          id: doc.id\n        }\n        this.setState({\n          test: [...this.state.test, doc ],\n        });\n      });\n    });\n  }\n\n  render() {\n    return (\n      <BoardWrapper>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          ariaHideApp={false}\n        >\n          <Card closeModal={this.closeModal} status={this.props.cat} task={this.state.current} edit={true} />\n        </Modal>\n        <BoardTitle> Task board </BoardTitle>\n        <List title=\"To do\" tasks={this.state.todo} cat=\"todo\" openModals={this.editModal} />\n        <List title=\"Work in Progress\" tasks={this.state.wip} cat=\"wip\" openModals={this.editModal}/>\n        <List title=\"Testing\" tasks={this.state.test} cat=\"test\" openModals={this.editModal}/>\n        <List title=\"Completed\" tasks={this.state.comp} cat=\"comp\" openModals={this.editModal}/>\n      </BoardWrapper>\n    );\n  }\n}","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import styled from 'styled-components'\n\nexport const InfoArea = styled.div`\n  width: 70%;\n  height: 100%;\n  display: inline-block;\n  color: #fff;\n  background-size: cover;\n  font-size: 6em;\n  background: url('https://github.com/images/modules/site/heroes/simple-codelines.svg'), #2a3137;\n  text-align: center;\n  padding-top: 10%;\n`;\n\nexport const LoginArea = styled.div`\n  width: 30%;\n  height: 100%;\n  display: inline-block;\n  float: right;\n  bottom: 10px;\n  background-color: #ffffff;\n  padding-top: 10%;\n`;\n\nexport const LoginWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Img = styled.img`\n  width: 90%;\n  height: 30%;\n`;","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport GithubLoginButton from \"react-social-login-buttons/lib/buttons/GithubLoginButton\";\nimport history from '../../history';\nimport { InfoArea, LoginArea, LoginWrapper, Img } from './styles';\nimport dev from '../../images/undraw_dev.svg';\n\nexport default class Login extends Component {\n\n  login = () => {\n    var provider = new firebase.auth.GithubAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function(result) {\n      // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      console.log('hit', result);\n      console.log('hit2', user);\n      localStorage.setItem(\"access_token\", token);\n      history.push('/task');\n      // ...\n    }).catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n    });\n  }\n\n  render () {\n    return(\n      <LoginWrapper>\n        <InfoArea>\n          <p> Coderz Mafia </p>\n        </InfoArea>\n        <LoginArea>\n          <Img src={dev} />\n          <GithubLoginButton onClick={this.login} />\n        </LoginArea>\n      </LoginWrapper>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\n\nexport default class Twitter extends Component {\n  render () {\n    return(\n      <TwitterTimelineEmbed\n        sourceType=\"timeline\"\n        screenName=\"dan_abramov\"\n        theme=\"dark\"\n        options={{height: 620}}\n        noScrollbar\n      />\n    );  \n  }\n}","\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Img = styled.img`\n  width: 60%;\n  margin-top: 5%;\n  margin-bottom: 5%;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  border-radius: 4px;\n  background-color: #282f33;\n  border: none;\n  color: #FFFFFF;\n  text-align: center;\n  font-size: 28px;\n  padding: 20px;\n  width: 200px;\n  transition: all 0.5s;\n  cursor: pointer;\n  margin: 5px;\n  & > span {\n    cursor: pointer;\n    display: inline-block;\n    position: relative;\n    transition: 0.5s;\n    &:after {\n      content: '\\00bb';\n      position: absolute;\n      opacity: 0;\n      top: 0;\n      right: -20px;\n      transition: 0.5s;\n    }\n  }\n  &:hover {\n    & > span {\n      padding-right: 25px;\n      &:after {\n        opacity: 1;\n        right: 0;\n      }\n    }\n  }\n`;\n\n","import React, { Component } from 'react';\nimport task from '../../images/undraw_task.svg';\nimport history from '../../history';\nimport { Wrapper, Img, Button } from './styles';\n\nexport default class TaskBox extends Component {\n\n  handleWork = () => {\n    history.push('/task');\n  }\n\n  render () {\n    return(\n      <Wrapper>\n        <Img src={task} />\n        <Button onClick={this.handleWork}> <span> Lets work</span> </Button>\n      </Wrapper>\n    );\n  }\n}","import styled from 'styled-components'\n\nexport const Propic = styled.img`\n  width: 32px;\n  border-radius: 50%;\n  display: inline-block;\n  float: left;\n`;\n\nexport const Name = styled.p`\n  display: inline-block;\n  margin-left: 10px;\n  margin-top: 5px;\n`;\n\nexport const PersonWrapper = styled.div`\n  margin: 0 10px 5px 10px;\n  background-color: #282f33;\n  color: #ffffff;\n  min-height: 100px;\n  padding: 20px;\n`;\n\nexport const ActivityWrapper = styled.div`\n  height: 90%;\n  overflow-y: scroll;\n`;","import React, { Component } from 'react';\nimport { Propic, Name, PersonWrapper, ActivityWrapper } from './styles';\n\nexport default class Activity extends Component {\n  \n  constructor() {\n    super();\n    this.setState({\n      test: ''\n    })\n  }\n\n  handleActivityType = (type) => {\n    console.log('type', type);\n    switch(type) {\n      case \"CreateEvent\":\n        return \"Created the repository\"\n      case \"ForkEvent\":\n        return \"Forked the repository\"\n      case \"WatchEvent\":\n        return \"Starred the repository\"\n      default: \n        return \"test\"\n    }\n  }\n\n  render () {\n    console.log('this.props', this.props.data);\n    return(\n      <ActivityWrapper> \n        { this.props.data.map((item, i) => \n          <PersonWrapper>\n            <Propic alt=\"profile pic\" src={item.actor.avatar_url} />\n            <Name> {item.actor.display_login} </Name> \n            <p> {this.handleActivityType(item.type)}</p>\n          </PersonWrapper>\n        )}\n      </ActivityWrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: 100%;\n  overflow: scroll;\n  padding: 10px;\n`;\n\nexport const BiLayoutWrapper = styled.div`\n  width: 420px;\n  height: 50%;\n  border: 1px solid;\n`;\n\nexport const SingleLayoutWrapper = styled.div`\n  width: 420px;\n  height: 100%;\n`;\n\nexport const HalfLayoutWrapper = styled.div`\n  height: 50%;\n`;","import React, { Component } from 'react';\nimport Twitter from '../../components/Twitter';\nimport TaskBox from  '../../components/TaskBox';\nimport Activity from '../../components/Activity';\nimport { Wrapper, HalfLayoutWrapper, BiLayoutWrapper, SingleLayoutWrapper } from './styles';\n\nconst activity_API = 'https://api.github.com/users/thamizhselvan93/received_events?access_token='\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activity: [],\n    };\n  }\n  \n  componentDidMount() {\n    let key = localStorage.getItem('access_token');\n    fetch(activity_API + key)\n      .then(response => response.json())\n      .then(data => this.setState({ activity: data }));\n  }\n\n  render () {\n    return(\n      <Wrapper>\n        <SingleLayoutWrapper>\n          <HalfLayoutWrapper>\n            Task\n          </HalfLayoutWrapper>\n          <HalfLayoutWrapper>\n            <TaskBox />\n          </HalfLayoutWrapper>\n        </SingleLayoutWrapper>\n        <SingleLayoutWrapper>\n          <Activity data={this.state.activity}/>\n        </SingleLayoutWrapper>\n        <SingleLayoutWrapper>\n          <Twitter /> \n        </SingleLayoutWrapper>\n      </Wrapper>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Board from './components/Board';\nimport Login from './containers/Login';\nimport Home from './containers/Home';\nimport history from './history';\nimport { Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Route path=\"/login\"  component={Login} />\n        <Route path=\"/home\"  component={Home} />\n        <Route exact path=\"/\" component={Board} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/undraw_dev.59389695.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_task.884673e9.svg\";"],"sourceRoot":""}